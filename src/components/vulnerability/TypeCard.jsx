import React from 'react';
import {
  Box,
  Typography,
  Card,
  CardContent,
  LinearProgress,
  List,
  ListItem,
  ListItemIcon,
  ListItemText,
  Tooltip, // Import Tooltip
} from '@mui/material';
import CheckCircleIcon from '@mui/icons-material/CheckCircle';
import WarningIcon from '@mui/icons-material/Warning';
import ErrorIcon from '@mui/icons-material/Error';

// Icon mapping for interpretation levels
const interpretationIcons = {
  Alto: <CheckCircleIcon fontSize="small" color="success" />,
  Medio: <WarningIcon fontSize="small" color="warning" />,
  Bajo: <ErrorIcon fontSize="small" color="error" />,
};

const TypeCard = ({ title, data }) => {
  if (!data) return null;

  const { summary, subtypes } = data;

  return (
    <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>
      <CardContent sx={{ flexGrow: 1 }}>
        <Typography variant="h6" component="h3" gutterBottom>
          {title}
        </Typography>
        <Box sx={{ display: 'flex', alignItems: 'baseline', gap: 1, mb: 1 }}>
          <Typography variant="h4" component="p" sx={{ color: summary.interpretation.color, fontWeight: 'bold' }}>
            {`${summary.score}%`}
          </Typography>
          <Typography variant="body1" sx={{ color: summary.interpretation.color }}>
            {summary.interpretation.text}
          </Typography>
        </Box>
        <LinearProgress
          variant="determinate"
          value={summary.progress}
          sx={{ height: 6, borderRadius: 3, mb: 2 }}
        />
        <Typography variant="subtitle2" color="text.secondary" sx={{ mb: 1 }}>
          Desglose por Subtipo:
        </Typography>
        <List dense>
          {Object.entries(subtypes).map(([name, subtypeData]) => (
            // Wrap ListItem in a Tooltip for a cleaner look
            <Tooltip title={`Nivel: ${subtypeData.interpretation.text}`} key={name} arrow>
              <ListItem sx={{ p: 0 }}>
                <ListItemIcon sx={{ minWidth: '32px' }}>
                  {interpretationIcons[subtypeData.interpretation.text]}
                </ListItemIcon>
                {/* Remove the secondary prop to hide the text */}
                <ListItemText primary={name} />
              </ListItem>
            </Tooltip>
          ))}
        </List>
      </CardContent>
    </Card>
  );
};

export default TypeCard;

