import { createSlice } from '@reduxjs/toolkit';
import { generateUUID } from '../../helpers/uuidGenerator';

const initialState = {
  isLoading: false,
  error: null,
  vulnerabilities: [], // Array to hold vulnerability objects
};

export const vulnerabilitySlice = createSlice({
  name: 'vulnerability',
  initialState,
  reducers: {
    // Reducer to add a new vulnerability from payload
    addVulnerability: (state, action) => {
      const newVulnerability = {
        ...action.payload,
        id_vulnerabilidad: generateUUID(),
        fecha_creacion: new Date().toISOString(),
      };
      state.vulnerabilities.push(newVulnerability);
    },

    // Reducer to update an existing vulnerability
    updateVulnerability: (state, action) => {
      const index = state.vulnerabilities.findIndex(
        (vul) => vul.id_vulnerabilidad === action.payload.id_vulnerabilidad
      );
      if (index !== -1) {
        // Merge existing data with new data
        state.vulnerabilities[index] = { ...state.vulnerabilities[index], ...action.payload };
      }
    },

    // Reducer to remove a vulnerability by its ID
    deleteVulnerability: (state, action) => {
      state.vulnerabilities = state.vulnerabilities.filter(
        (vul) => vul.id_vulnerabilidad !== action.payload.id_vulnerabilidad
      );
    },

    // Reducer to clear all vulnerabilities
    clearVulnerabilities: (state) => {
      state.vulnerabilities = [];
      state.isLoading = false;
      state.error = null;
    },

     // Reducers for loading and error states
     startLoadingVulnerabilities: (state) => {
        state.isLoading = true;
      },
      setVulnerabilitiesError: (state, action) => {
        state.isLoading = false;
        state.error = action.payload;
      },
  },
});

// Export the action creators
export const {
  addVulnerability,
  updateVulnerability,
  deleteVulnerability,
  clearVulnerabilities,
  startLoadingVulnerabilities,
  setVulnerabilitiesError
} = vulnerabilitySlice.actions;

// Export the reducer
export default vulnerabilitySlice.reducer;
